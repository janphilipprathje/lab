apply plugin: 'java'
apply plugin: 'idea'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
}

// declare defaults for all subprojects
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        compile 'org.apache.commons:commons-lang3:3.4'

        testCompile('junit:junit:4.+') {
            exclude group: 'org.hamcrest'
        }
        testCompile 'org.hamcrest:hamcrest-all:1.+'
    }

    group 'de.fh_kiel'
    version '1.0'
}

// the annotation processor needs the api to know, which annotations to scan
project(':annotation-processing') {

    dependencies {
        compile project(':api')

        compile 'com.squareup:javapoet:1.7.+'
    }
}

// the portal needs the annotation processor and some more dependencies to test
project(':developer_portal') {
    sourceSets {
        generated {
            java {
                srcDirs = ['src/main/generated']
            }
        }
//        main {
//            compileClasspath += sourceSets.generated.output
//        }
    }

    dependencies {
        compile project(':api')
        compile project(':annotation-processing')

        testCompile('org.mockito:mockito-core:1.10.+') {
            exclude group: 'org.hamcrest'
        }
    }

    task runProcessor(type: JavaCompile, group: 'build', description: 'generates classes including ' +
            'the boilerplate code') {
        source = sourceSets.main.java
        classpath = configurations.compile
        options.compilerArgs = [
                "-proc:only",
                "-processor", "de.fh_kiel.annotation_processor.BoilerplateProcessor"
        ]
        destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
    }

    compileJava {
        dependsOn runProcessor
        source = runProcessor.destinationDir
    }

    compileGeneratedJava {
        dependsOn runProcessor
        options.warnings = false
        classpath = sourceSets.main.runtimeClasspath
    }

    clean {
        delete sourceSets.generated.java.srcDirs
    }

    idea {
        module {
            sourceDirs += file('src/main/generated')
        }
    }
}